
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author Connor
 */
public class POS_Login extends javax.swing.JFrame {

    /**
     * Creates new form NumberAdditionUI
     */
    public POS_Login() {
        initComponents();
        newUserPanel.hide();
    }
    
    public String getUser() {
        return userNameText.getText();
    }
    
    public String getPswd() {
        return passwordText.getText();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userNameText = new javax.swing.JTextField();
        loginBtn = new javax.swing.JButton();
        newUserBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        passwordText = new javax.swing.JPasswordField();
        newUserPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        fullNameText = new javax.swing.JTextField();
        newPasswordText = new javax.swing.JTextField();
        newContactText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        newUsernameText = new javax.swing.JTextField();
        signUpBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setName("LoginScreen"); // NOI18N
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        userNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameTextActionPerformed(evt);
            }
        });
        getContentPane().add(userNameText, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 160, 102, -1));

        loginBtn.setBackground(new java.awt.Color(102, 0, 0));
        loginBtn.setForeground(new java.awt.Color(255, 255, 255));
        loginBtn.setText("Login");
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });
        getContentPane().add(loginBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 240, -1, -1));

        newUserBtn.setBackground(new java.awt.Color(102, 0, 0));
        newUserBtn.setForeground(new java.awt.Color(255, 255, 255));
        newUserBtn.setText("New user? Register");
        newUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newUserBtnActionPerformed(evt);
            }
        });
        getContentPane().add(newUserBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, -1, -1));

        jLabel1.setText("Username:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 160, -1, -1));

        jLabel2.setText("Password:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 200, -1, -1));
        getContentPane().add(passwordText, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 200, 102, -1));

        newUserPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel3.setText("Phone Number:");

        jLabel4.setText("Full Name:");

        jLabel5.setText("New Password:");

        jLabel6.setText("New Username:");

        signUpBtn.setBackground(new java.awt.Color(102, 0, 0));
        signUpBtn.setForeground(new java.awt.Color(255, 255, 255));
        signUpBtn.setText("Sign Up");
        signUpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signUpBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newUserPanelLayout = new javax.swing.GroupLayout(newUserPanel);
        newUserPanel.setLayout(newUserPanelLayout);
        newUserPanelLayout.setHorizontalGroup(
            newUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newUserPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newUserPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(newContactText, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))
                    .addGroup(newUserPanelLayout.createSequentialGroup()
                        .addGroup(newUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(newUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fullNameText)
                            .addComponent(newPasswordText, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(newUserPanelLayout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(newUsernameText)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newUserPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(signUpBtn)
                .addGap(95, 95, 95))
        );
        newUserPanelLayout.setVerticalGroup(
            newUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newUserPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(fullNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(newUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(newUsernameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(newUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(newPasswordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(newUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(newContactText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(signUpBtn)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        getContentPane().add(newUserPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 330, 270, 230));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Layne's Logo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 510, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 510, 140));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPasswordField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField1ActionPerformed
        // IGNORE... IRRELEVANT FUNCTION... NETBEANS DOES NOT ALLOW ME TO DELETE
    }//GEN-LAST:event_jPasswordField1ActionPerformed

    private void userNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userNameTextActionPerformed

    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed
        // TODO: Check username and password against database
            // Check for employee vs customer
            // Check for existing user
                // Check for contact info
        boolean cont = false;
        dbSetup my = new dbSetup();
        Connection conn = null;
        
        try {
            Class.forName("org.postgresql.Driver");
            conn = DriverManager.getConnection("jdbc:postgresql://csce-315-db.engr.tamu.edu/db906_group7_project2", my.user, my.pswd);
        } catch (Exception e) {
            e.printStackTrace();
            System.err.println(e.getClass().getName()+": "+e.getMessage());
            System.exit(0);
        }
        String uN = userNameText.getText();
        String pW = passwordText.getText();
        String newCI = "";
        boolean needCI = false;
        boolean needEmpCI = false;
        
        boolean loginAttemptEmployee = false;
        if(uN.substring(0,1).equals("$")){
            loginAttemptEmployee = true;
        }
        
        // ******** TEST USERNAME/PASS SAME FROM CUSTOMER ********
        if(loginAttemptEmployee == false){
            try {
                Statement stmt       = conn.createStatement();
                //ResultSet UserFromDB = stmt.executeQuery("SELECT \"userName\" FROM customer");
                String sqlStatement = "SELECT * FROM customer \nWHERE \"userName\"=' " + uN +"';";

                ResultSet UserFromDB = stmt.executeQuery(sqlStatement);

                boolean userRecognized = false;
                
                while(UserFromDB.next()){
                    if(UserFromDB.getString("userName").trim().equals(uN.trim())){
                        userRecognized = true;
                        cont = true;
                        // JOptionPane.showMessageDialog(null,"Cont: " + cont + "\n");
                        if(UserFromDB.getString("password").trim().equals(pW.trim())){
                            cont = true;
                            String cI = UserFromDB.getString("contactInfo");

                            if(UserFromDB.getString("contactInfo") == null){
                                newCI = JOptionPane.showInputDialog(null,"You need a phone number! Enter here...");
                                needCI = true;
                            }

                            // JOptionPane.showMessageDialog(null,"Cont:" + cI + "|\n");
                        } else {
                            JOptionPane.showMessageDialog(null,"Password Incorrect. Please enter a correct password.");
                            cont = false;
                        }
                    }
                }
                if(!userRecognized){
                    JOptionPane.showMessageDialog(null,"Username not recognized. Would you like to create a new user? Click 'New User? Register'");
                }
                

            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null,e.getClass().getName()+": "+e.getMessage());
            }
        } 
        // ******** TEST USERNAME/PASS SAME FROM EMPLOYEE ********
        else {
            try {
                Statement stmt       = conn.createStatement();
                //ResultSet UserFromDB = stmt.executeQuery("SELECT \"userName\" FROM customer");
                String sqlStatement = "SELECT * FROM login WHERE \"userName\"='" + uN +"';";
                
                ResultSet UserFromDB = stmt.executeQuery(sqlStatement);
                boolean userRecognizedEmp = false;
                while(UserFromDB.next()){
                    if(UserFromDB.getString("userName").trim().equals(uN.trim())){
                        // userRecognized = true;
                        cont = true;
                        userRecognizedEmp = true;
                        // JOptionPane.showMessageDialog(null,"Cont: " + cont + "\n");
                        if(UserFromDB.getString("password").trim().equals(pW.trim())){
                            cont = true;
                            Boolean loginType = UserFromDB.getBoolean("loginType");
                                if(loginType == true){
                                    cont = true;
                                } else {
                                    cont = false;
                                    JOptionPane.showMessageDialog(null,"Not a Manager. Please contact a manager to Login...");
                                }
                            // JOptionPane.showMessageDialog(null,"Cont:" + cI + "|\n");
                        } else {
                            JOptionPane.showMessageDialog(null,"Password Incorrect. Please enter a correct password.");
                            cont = false;
                        }
                    }
                    
                }
                if (!userRecognizedEmp){
                    JOptionPane.showMessageDialog(null, "Employee Username not recognized... Please ask a manager to create a username for you.");
                }
                
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null,e.getClass().getName()+": "+e.getMessage());
            }            
        }
        // ******** NEED TO ENTER PHONE NUMBER ********
        if(needCI){
            try {
                Statement stmt       = conn.createStatement();
                //ResultSet UserFromDB = stmt.executeQuery("SELECT \"userName\" FROM customer");
                String sqlStatement = "UPDATE customer SET \"contactInfo\"='" + newCI + "' WHERE \"userName\"=' " + uN + "';";

                int rowsInserted = stmt.executeUpdate(sqlStatement);
                JOptionPane.showMessageDialog(null,"" + rowsInserted + " New Phone Number Updated.");

            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null,e.getClass().getName()+": "+e.getMessage());
            }
        
            
        }
        // ******** ONLY CONTINUE IF BOTH SAME ********
        if(cont){
            // CREATE un.txt BEFORE ENTERING CUSTOMER/MANAGER SINTERFACES
            try{
                String userDirectory = new File("").getAbsolutePath();
                
                File uNWriter = new File(userDirectory + "/un.txt");
                // uNWriter.write(uN);
                // uNWriter.close();
                
                JOptionPane.showMessageDialog(null, "Sending you over to the DB! Enjoy!");
            } catch (Exception e){
                e.printStackTrace();
            }
            
            
            // FILE CREATED WITH USER
            if (userNameText.getText().substring(0, 1).equals("$")) {
                this.dispose();
                POS_Employee emp = new POS_Employee(uN);
                emp.setVisible(true);
            } else {
                this.dispose();
                POS_Customer cus = new POS_Customer(uN);
                cus.setVisible(true);
            }
        }
        
        try {
            conn.close();
        } catch(Exception e) {
            JOptionPane.showMessageDialog(null,"Connection NOT Closed.");
        }
    }//GEN-LAST:event_loginBtnActionPerformed

    private void newUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newUserBtnActionPerformed
        newUserPanel.show();
    }//GEN-LAST:event_newUserBtnActionPerformed

    private void signUpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signUpBtnActionPerformed
        String name = fullNameText.getText().toUpperCase();
        String user = newUsernameText.getText();
        String pass = newPasswordText.getText();
        String contact = newContactText.getText();

        // TODO: Add new user info to database
        dbSetup my = new dbSetup();
        Connection conn = null;
        
        try {
            Class.forName("org.postgresql.Driver");
            conn = DriverManager.getConnection("jdbc:postgresql://csce-315-db.engr.tamu.edu/db906_group7_project2", my.user, my.pswd);
        } catch (Exception e) {
            e.printStackTrace();
            System.err.println(e.getClass().getName()+": "+e.getMessage());
            System.exit(0);
        }
        // ******** ADD NEW CUSTOMER TO CUSTOMER TABLE ********
        try {
            Statement stmt       = conn.createStatement();
            //ResultSet UserFromDB = stmt.executeQuery("SELECT \"userName\" FROM customer");
            String sqlStatement = "INSERT INTO customer VALUES ('" + name + "',' " + user + "','" + pass + "','" + contact +"');";
            
            int rowsInserted = stmt.executeUpdate(sqlStatement);
            JOptionPane.showMessageDialog(null,"" + rowsInserted + " New User Inserted.");
            
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null,e.getClass().getName()+": "+e.getMessage());
        }
        // ******** ADD NEW CUSTOMER TO LOGIN ********
        try {
            
            boolean loginType = false;
            Statement stmt       = conn.createStatement();
            //ResultSet UserFromDB = stmt.executeQuery("SELECT \"userName\" FROM customer");
            String sqlStatement = "INSERT INTO login VALUES ('" + loginType + "','" + user + "','" + pass + "');";
            
            int rowsInserted = stmt.executeUpdate(sqlStatement);
            JOptionPane.showMessageDialog(null,"" + rowsInserted + " New Customer Added to Login.");
            
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null,e.getClass().getName()+": "+e.getMessage());
        }
        
        this.dispose();
        POS_Login newLogin = new POS_Login();
        newLogin.setVisible(true);
        
        try {
            conn.close();
        } catch(Exception e) {
            JOptionPane.showMessageDialog(null,"Connection NOT Closed.");
        }
    }//GEN-LAST:event_signUpBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(POS_Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(POS_Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(POS_Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(POS_Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new POS_Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField fullNameText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton loginBtn;
    private javax.swing.JTextField newContactText;
    private javax.swing.JTextField newPasswordText;
    private javax.swing.JButton newUserBtn;
    private javax.swing.JPanel newUserPanel;
    private javax.swing.JTextField newUsernameText;
    private javax.swing.JPasswordField passwordText;
    private javax.swing.JButton signUpBtn;
    private javax.swing.JTextField userNameText;
    // End of variables declaration//GEN-END:variables
}
